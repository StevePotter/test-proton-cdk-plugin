AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Proton support for provisioning via CodeBuild
Parameters:
  ProvisioningRole:
    Type: String
    Description: A role ARN that the codebuild project will assume when running.
Globals:
  Function:
    Layers:
      - !Ref AwsProtonCdkPluginRuntimeDependenciesLayer
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 100
Metadata:
  AWS::ServerlessRepo::Application:
    Name: proton-test-cdk
    Description: Aws codebuild
    Author: user1
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['tests']
    HomePageUrl: https://github.com/user1/proton-test-cdk-project
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/user1/proton-test-cdk-project
Resources:
  StartProvisioningFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/StartProvisioningHandler.StartProvisioningHandler
      Description: Aws Proton plugin to start provisioning CDK templates
      Environment:
        Variables:
          CODE_BUILD_NAME: !Ref AwsProtonCdkPluginCodeBuildProject
          CODE_BUILD_SOURCE_BUCKET_NAME: !Ref CodeBuildSourceBucket
      Tags:
          AwsProtonPlugin: "CDK"
          AwsProtonPluginFunction: "StartProvisioning"

  # Shared layer with Lambda runtime dependencies
  AwsProtonCdkPluginRuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    DeletionPolicy: Delete
    Metadata:
      BuildMethod: makefile
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs14.x

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role assumed by CodeBuild for AWS Proton CDK Plugin
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      # codebuild gets admin permissions because the build deploys CDK, which can create almost any kind of construct
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  AwsProtonCdkPluginCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Description: AWS Proton CodeBuild Plugin
      TimeoutInMinutes: 60
      ServiceRole: !Ref 'CodeBuildRole'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      Source:
        Type: NO_SOURCE
        BuildSpec:  >-
          version: 0.2
      Tags:
        - Key: AwsProtonPlugin
          Value: CDK

  # Bucket that contains zip files that are used as input to CodeBuild
  CodeBuildSourceBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldObjects
            Status: Enabled
            ExpirationInDays: 1
            NoncurrentVersionExpirationInDays: 1
      Tags:
        - Key: AwsProtonPlugin
          Value: CDK
